# PostgreSQL Performance Configuration for Big Data Analytics
# Optimized for high throughput OLAP workloads

# MEMORY SETTINGS - Optimized for 8GB system
shared_buffers = 512MB                    # 25% of RAM
effective_cache_size = 1536MB            # 75% of RAM
work_mem = 16MB                          # Per connection work memory
maintenance_work_mem = 128MB             # For maintenance operations
temp_buffers = 32MB                      # Temporary buffer size

# CHECKPOINT SETTINGS - Reduce I/O overhead
checkpoint_timeout = 15min              # Longer checkpoint intervals
checkpoint_completion_target = 0.8      # Spread checkpoints over time
max_wal_size = 2GB                      # Larger WAL size for big data
min_wal_size = 512MB                    # Minimum WAL size

# WRITE-AHEAD LOGGING - Optimized for performance
wal_buffers = 16MB                      # WAL buffer size
wal_writer_delay = 200ms                # WAL writer delay
commit_delay = 100000                   # Commit delay in microseconds
commit_siblings = 5                     # Minimum concurrent transactions

# QUERY PLANNER - Enhanced for analytics
random_page_cost = 1.1                 # Lower for SSD storage
effective_io_concurrency = 200         # For SSD/NVMe storage
max_parallel_workers_per_gather = 4    # Parallel query workers
max_parallel_workers = 8               # Total parallel workers
max_worker_processes = 8               # Total worker processes
parallel_tuple_cost = 0.1              # Lower parallel tuple cost
parallel_setup_cost = 1000.0           # Parallel setup cost

# CONNECTION SETTINGS - Optimized for high concurrency
max_connections = 200                   # Increased for multiple applications
superuser_reserved_connections = 3     # Reserved for admin

# RESOURCE USAGE - Background writer optimization
bgwriter_delay = 200ms                 # Background writer delay
bgwriter_lru_maxpages = 100            # Pages written per round
bgwriter_lru_multiplier = 2.0          # Multiplier for next round

# VACUUM SETTINGS - Automated maintenance
autovacuum = on                        # Enable autovacuum
autovacuum_max_workers = 3             # More vacuum workers
autovacuum_naptime = 30s               # More frequent vacuum
autovacuum_vacuum_threshold = 50       # Lower threshold
autovacuum_analyze_threshold = 50      # Lower analyze threshold
autovacuum_vacuum_scale_factor = 0.1   # Vacuum when 10% changed
autovacuum_analyze_scale_factor = 0.05 # Analyze when 5% changed

# LOGGING - Performance monitoring
log_destination = 'stderr'
logging_collector = on
log_filename = 'postgresql-%Y-%m-%d.log'
log_rotation_age = 1d
log_rotation_size = 100MB
log_min_duration_statement = 1000      # Log slow queries (1s+)
log_checkpoints = on                   # Log checkpoint activity
log_connections = off                  # Don't log all connections
log_disconnections = off               # Don't log disconnections
log_lock_waits = on                    # Log lock waits
log_statement = 'ddl'                  # Log DDL statements
log_temp_files = 10MB                  # Log large temp files

# STATISTICS - Enhanced query planning
track_activities = on
track_counts = on
track_io_timing = on                   # Track I/O timing
track_functions = pl                   # Track function calls
default_statistics_target = 500       # Higher statistics target

# TIMEZONE AND LOCALE
timezone = 'UTC'
lc_messages = 'en_US.UTF8'
lc_monetary = 'en_US.UTF8'
lc_numeric = 'en_US.UTF8'
lc_time = 'en_US.UTF8'
default_text_search_config = 'pg_catalog.english'

# REPLICATION (if needed later)
wal_level = replica                    # Enable replication
max_wal_senders = 3                    # WAL sender processes
max_replication_slots = 3              # Replication slots

# ADVANCED TUNING - Big data specific
enable_hashjoin = on                   # Enable hash joins
enable_mergejoin = on                  # Enable merge joins
enable_nestloop = off                  # Disable nested loops for analytics
enable_seqscan = on                    # Enable sequential scans
enable_sort = on                       # Enable sorting
enable_tidscan = on                    # Enable TID scans

# INDEX SETTINGS
maintenance_work_mem = 256MB           # For index creation
max_parallel_maintenance_workers = 4   # Parallel index creation

# CONNECTION POOLING PREPARATION
tcp_keepalives_idle = 600              # Keep connection alive
tcp_keepalives_interval = 30           # Keepalive interval
tcp_keepalives_count = 3               # Keepalive attempts

# SHARED PRELOAD LIBRARIES (if extensions needed)
# shared_preload_libraries = 'pg_stat_statements'

# CUSTOM SETTINGS FOR ANALYTICS WORKLOAD
join_collapse_limit = 12               # Higher join collapse limit
from_collapse_limit = 12               # Higher from collapse limit
geqo_threshold = 15                    # Genetic query optimizer threshold
constraint_exclusion = partition      # Enable partition pruning